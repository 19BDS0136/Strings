/*
Problem:
Given two strings a and b consisting of lowercase characters. The task is to 
check whether two given strings are anagram of each other or not. An anagram 
of a string is another string that contains same characters, only the order of 
characters can be different. For example, “act” and “tac” are anagram of each other.

*/

#include <bits/stdc++.h>
using namespace std;

void checkAnagram(string s1, string s2)
{
    if(s1.length() != s2.length()) {
        cout << "NO" << endl;
        return;
    }
    
    map<char, int> s;
    for(int i = 0; i < s1.length(); i++) {
        s[s1[i]]++;
    }
    for(int i = 0; i < s2.length(); i++) {
        if(s.find(s2[i]) != s.end()) {
            s[s2[i]]--;
        } else {
            cout << "NO" << endl;
            return ;
        }
    }
    
    cout << "YES" << endl;
 }

int main() {
    string s1, s2;
    cin >> s1 >> s2;
    checkAnagram(s1, s2);

	return 0;
}
